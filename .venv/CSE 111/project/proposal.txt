CSE 111 Proposal for a Student Chosen Program

    (This is a proposal. All proposals are written with our best
    knowledge at the beginning of a project. As we progress from the
    beginning to the end of a project, we gain more knowledge, and we
    change some of our proposed ideas. This is part of completing any
    project and is fine.  However, we still must write a proposal so
    that our teachers or supervisors know what we intend to do. Please
    answer each of the following questions to the best of your
    knowledge.)

1. What is the title of your program?

Fortipass

2. What real-world problem will your program address or help to solve?

In today's digital world, we are constantly being hit from all sides with attempts to steal our data or other things. 
This program aims to essnetially create a local password manager system. First and foremost it will allow you to enter a password into a gui, and 
check its strength. Then it will take that and make some suggestions to make it potentially stronger. 
If I have time I will also include the ability to check it against a database of leaked passwords. Finally Also if I have time you will have the ability to save and
encrypt the password. 

3. What will you learn from developing this program?

I will learn how to use python to make a GUI, as well as encrypting and checking against a database. 

4. What Python modules will your program use?

    (Some examples are: csv, datetime, functools, matplotlib, math,
    pandas, pytest, random, requests, and tkinter.)

    tkinter, re, random, sring, hashlib, requests, pytest.

5. Will you separate your Python program into functions that each
perform a single task?

    (Remember that the most reusable functions don't get user input and
    don't print results but instead have parameters and return a result.
    Functions that get user input and print results are important and do
    useful work but are not easily reusable.)

    (Remember also that it's hard to test functions that get user input
    and print results. It's easy to test functions that don't get user
    input and don't print results but instead have parameters and return
    a result. Therefore, you should write most of your program functions
    to have parameters and return a result.)

yes each one will focus on a specific function of the program

6. Will you write test functions to test at least two of your program
functions?

yes
